---
import Layout from '../components/Layout.astro';
import DocumentHead from '../components/DocumentHead.astro';
import TagsList from '../components/TagsList.astro';
import { getCollection, getEntry } from 'astro:content';
import Comments from '../components/Comments.astro';
import StarRating from '../components/StarRating.astro';
import YouTubeScript from '../components/YouTubeScript.astro';

export async function getStaticPaths() {
  const notes = await getCollection('notes');
  return notes.map((note) => ({
    params: { slug: note.slug },
    props: { note },
  }));
}

export function formatDate(date) {
  return new Date(date.replace(/-/g, '/')).toLocaleDateString('en-US', {
    month: 'long',
    day: 'numeric',
    year: 'numeric',
  });
}

const { slug } = Astro.params;
const { note } = Astro.props;

if (slug === undefined) return;

const { Content } = await note.render();

const {
  data: {
    added,
    excerpt,
    includeYTResources,
    noComments,
    tags,
    title,
    type,
    updated,
  },
} = note;

// random imageId between 1 and 6
const imageId = Math.floor(Math.random() * 6) + 1;

let description = excerpt;
let permalink = `https://rachsmith.com/${slug}/`;

const titleEncoded = encodeURIComponent(`re: ${title}`);
---

<style>
  h1 {
    font-size: 2.5rem;
    margin-bottom: 0;
    line-height: 1;
  }

  .meta {
    margin: 2em 0;
    padding: 0.5em 0;
    border-top: 1px dashed var(--text-color);
    color: var(--second-text-color);
  }

  .meta .tags {
    list-style: none;
    display: flex;
    margin: 0;
    padding: 0;
  }

  .meta .added-updated {
    font-size: 0.9em;
    text-transform: uppercase;
  }

  :global(#footnote-label) {
    font-size: 1.2rem;
    text-transform: uppercase;
  }

  .thanks-for-reading {
    margin: 4rem 0;
  }
</style>

<html lang="en">
  <DocumentHead
    title={title}
    description={description ?? ''}
    permalink={permalink}
    canonicalUrl={permalink}
    imageId={imageId}
    includeYTResources={includeYTResources}
  />
  <body>
    <Layout page="note">
      <article>
        <h1 class="title">{title}</h1>
        <div class="meta">
          <span class="added-updated"
            >Added: {formatDate(added)}
            {updated !== added && <br />}
            {updated !== added && `Updated: ${formatDate(updated)}`}
          </span>

          <TagsList tags={tags.map((t) => ({ name: t }))} />
        </div>
        <div class="styled-link-underlines">
          {
            type === 'book' && 'rating' in note.data && note.data.rating && (
              <StarRating rating={note.data.rating} />
            )
          }
          <Content />
        </div>
      </article>
      <section class="styled-link-underlines thanks-for-reading">
        <b>Thanks for reading!</b> If you'd like to share your thoughts you can
        <a href={`/${slug}/#comments`}>leave a comment</a>, <a
          href={`mailto:contact@rachsmith.com?subject=${titleEncoded}`}
          >send me an email</a
        >, hit me up <a href={'https://mastodon.social/@rachsmith'}
          >on Mastodon</a
        >, or <a href="https://github.com/rachsmithcodes/rachsmith.com/issues"
          >add an issue on GitHub</a
        >.
      </section>
      <Comments slug={slug} noComments={noComments} />
    </Layout>
    {includeYTResources && <YouTubeScript />}
  </body>
</html>
