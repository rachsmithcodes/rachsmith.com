---
import { InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';

import Layout from '../components/Layout.astro';
import BaseHead from '../components/BaseHead.astro';
import Tag from '../components/Tag.astro';
import { notesAndTags } from '../data/notes';
import Section from '../components/Section.astro';
import OutlineHeading from '../components/OutlineHeading.astro';
import { getCollection, getEntryBySlug } from 'astro:content';

export async function getStaticPaths() {
  const notes = await getCollection('notes');
  return notes.map((note) => ({
    params: { slug: note.slug },
    props: { note: note },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export function formatDate(date) {
  return new Date(date.replace(/-/g, '/')).toLocaleDateString('en-US', {
    month: 'long',
    day: 'numeric',
    year: 'numeric',
  });
}

const { slug } = Astro.params;
const { note } = Astro.props;

if (slug === undefined) return;

const entry = await getEntryBySlug('notes', slug);
if (!entry) return;

const { Content } = await entry.render();

const {
  data: { title, added, updated, tags, excerpt },
} = note;
const notes = await getCollection('notes');
const { allNotes, allTags } = notesAndTags(notes);
const noteIndex = [...allNotes].reverse().findIndex((p) => p.slug === slug);
const imageId = (noteIndex % 6) + 1;

let description = excerpt;
let permalink = `https://rachsmith.com/${slug}/`;

const titleEncoded = encodeURIComponent(`re: ${title}`);
const tweetTextEncoded = encodeURIComponent(
  `re: https://rachsmith.com/${note.slug}`
);
---

<style>
  .title {
    font-size: 3rem;
    font-weight: bold;
    margin-bottom: 1rem;
    text-align: center;
    line-height: 1.1em;
  }

  @media (max-width: 768px) {
    .title {
      font-size: 2.4rem;
    }
  }

  .meta {
    text-align: center;
    text-transform: uppercase;
    margin-bottom: 3em;
    font-family: var(--mono-font);
  }

  .meta p {
    font-size: 1rem;
    margin: 0.1em;
  }

  .meta-label {
    font-style: normal;
  }

  .comments {
    margin-bottom: 4em;
    margin-top: 4em;
  }
</style>

<BaseHead
  title={title}
  description={description}
  permalink={permalink}
  canonicalUrl={permalink}
  imageId={imageId}
/>

<Layout page="note" tags={allTags}>
  <article>
    <h1 class="title">{title}</h1>
    <div class="meta">
      <p>
        <em class="meta-label">Added:</em>
        {formatDate(added)}
      </p>
      {
        updated !== added && (
          <p>
            <em class="meta-label">Updated:</em> {formatDate(updated)}
          </p>
        )
      }
      {
        tags.length > 0 && (
          <p>
            <em class="meta-label">Tags:</em>{' '}
            {tags.map((tag) => (
              <Tag tag={tag} />
            ))}
          </p>
        )
      }
    </div>
    <Section>
      <div class="note-content rainbow-links">
        <Content />
      </div>
    </Section>
    <Section>
      <p class="rainbow-links">
        <b>Thanks for reading!</b> If you'd like to share your thoughts you can <a
          href={`https://rachsmith.com/${note.slug}#comments`}
          >leave a comment</a
        >, <a href={`mailto:contact@rachsmith.com?subject=${titleEncoded}`}
          >send me an email</a
        >, <a
          href={`https://twitter.com/intent/tweet?screen_name=rachsmithtweets&text=${tweetTextEncoded}`}
          >Tweet at me</a
        >, or <a href="https://github.com/rachsmithcodes/rachsmith.com/issues"
          >add an issue on GitHub</a
        >.
      </p>
    </Section>
  </article>
  <!-- {references.length > 0 && (
  <section className="p-5 border-b">
    <h3 className="mb-3 uppercase tracking-wide">
      Referenced by these notes
    </h3>
    <ul className="list-none">
      {references.map(({ title, slug, excerpt, tags }) => (
      <NoteListItem slug={slug} title={title} excerpt={excerpt} tags={tags} />
      ))}
    </ul>
  </section>
  )} -->
  <section class="comments">
    <OutlineHeading id="comments">Comments</OutlineHeading>
    <Section>
      <script is:inline>
        talkyardServerUrl = 'https://site-1hvw5pe7vn.talkyard.net';
      </script>
      <script
        is:inline
        async
        defer
        src="https://cdn.talkyard.net/-/talkyard-comments.min.js"
      ></script>
      <!-- You can specify a per page discussion id on the next line, if your URLs might change. -->
      <div class="talkyard-comments" style="margin-top: 45px;">
        <noscript>Please enable Javascript to view comments.</noscript>
        <p style="margin-top: 25px; opacity: 0.9; font-size: 96%">
          The Comments system is powered by a third party service - <a
            href="https://www.talkyard.io">Talkyard</a
          >. Sometimes they don't load ðŸ˜ž. If you're having trouble leaving a
          comment you can <a
            href={`mailto:contact@rachsmith.com?subject=${titleEncoded}`}
            >send me an email</a
          >.
        </p>
      </div>
    </Section>
  </section>
</Layout>
